mov 000, 000
lwd 001, 000            // L1:
mov 110, 001 
add 000, 110
lwd 010, 000 
add 000, 110
lwd 011, 000
add 000, 110
lwd 100, 000
mov 111, 000
mov 110, 000
add 111, 010
add 111, 110
Bgt 00000               // bgt Check if operand 2 is 0
Mov 111, 000
mov 110, 000
add 111, 001
add 111, 110
Bgt 00000               // bgt Check if operand 2 is 0
add 110, 110
beq 00100               // beq Done
mov 111, 000            // Check if operand 2 is 0:
mov 110, 000
add 111, 100
add 111, 110
Bgt 00001               // bgt Check if operand 1 is positive
Mov 111, 000
mov 110, 000
add 111, 001 
add 111, 110
Bgt 00001               // bgt Check if operand 1 is positive
add 110, 110
beq 00100               // beq Done
mov 110, 000            // LABEL: Check if operand 1 is positive
add 110, 001 
lsl 110
mov 110, 000
add 110, 110 
mov 111, 000
add 111, 110 
beq 00101               // beq Check operand 2???
Not 001
Not 010
mov 111, 001
Add 010, 111
mov 111, 000
Add 001, 111
mov 110, 000
xor 110, 011
lsl 110 
mov 110, 000
add 110, 110
mov 111, 000
add 111, 110
beq 00110               // beq Calculation
Not 011
Not 100
mov 111, 001
Add 100, 111
mov 111, 000
Add 011, 111
mov 101, 100            // Calculation:
lsl 101
lsl 101
lsl 101
lsl 101
add 101, 000
lwd 111, 101            // L2:
add 111, 010
str 111, 101 
mov 111, 001
not 111
add 101, 111 
lwd 111, 101 
add 111, 001 
str 111, 101 
mov 111, 001
not 111
add 101, 111
lwd 111, 101
mov 110, 000
add 111, 110
str 111, 101
mov 111, 001
not 111
add 101, 111 
lwd 111, 101 
mov 110, 000
add 111, 110
str 111, 101
mov 111, 001
not 111
add 100, 111 
add 011, 111 
mov 111, 000
mov 110, 000
add 110, 100 
add 110, 111 
bgt 00010               // bgt L2:
mov 111, 000
mov 110, 000
add 110, 011
add 110, 111
bgt 00010               // bgt L2:
mov 111, 001
not 111
add 000, 111
lwd 011, 000
mov 111, 001
add 000, 111
xor 001, 011
lsl 001
mov 111, 000
add 111, 111 
mov 110, 000
add 110, 111
beq 00100               // beq DONE
mov 101, 100
lsl 101
lsl 101
lsl 101
lsl 101
add 101, 000
lwd 111, 101
not 111
str 111, 101
mov 111, 001
not 111
add 101, 111
lwd 111, 101 
not 111
str 111, 101 
mov 111, 001
not 111
add 101, 111 
lwd 111, 101 
not 111
str 111, 101 
mov 111, 001
not 111
add 101, 111 
lwd 111, 101 
not 111
str 111, 101
mov 111, 011
add 101, 111 
mov 110, 001
lwd 111, 101
add 111, 110
str 111, 101
mov 111, 001
not 111
add 101, 111 
lwd 111, 101
mov 110, 000
add 111, 110
str 111, 101
mov 111, 001
not 111
add 101, 111 
lwd 111, 101 
mov 110, 000
add 111, 110 
str 111, 101
mov 111, 001
not 111
add 101, 111
lwd 111, 101
mov 110, 000
add 111, 110
str 111, 101
Mov 111, 100                // Done:
Lsl 111 
Lsl 111 
Lsl 111 
Lsl 111 
mov 110, 100
not 110
Mov 101, 001
Add 110, 101
Add 111, 110 
Add 111, 000 
Add 000, 101
Bgt 00011                   // bgt L1:
don 000, 000
